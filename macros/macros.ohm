G {
  start = findMacros*
  findMacros =
    | applySyntactic<Macro> -- macro
    | ident                  
    | any

  Macro = 
    | tIdentMacro "(" ListOf<ident, ","> ")"
    | tAnythingMacro "(" anystuff* ")"

  anystuff =
    | "(" anystuff* ")"       -- nested
    | ~"(" ~")" any      -- flat

  ident = identFirst identRest*
  identFirst = "A" .. "Z" | "a" .. "z" | "_" 
  identRest = "0" .. "9" | identFirst

  tAnythingMacro = "m" ~identRest
  tIdentMacro = "M" ~identRest

}

