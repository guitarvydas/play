defs scanner provides:[initialize read] returns:{object error} uses:[cons consatom $NIL]
  var text
  var index
  entry initialize (string)
	 text = string
         index = 0
  def nextchar ()
    cond { (terminated?) (setf index -1) $NIL)
           else          (let c <- text[index] in { (incf index) c) } }
  def terminated? () (>= index (length text))
  {
    entry parent/read ()
       cond { 
              (terminated?) (send error "EOF")
	      else let c <- (nextchar) in {
		     cond {
		            (=? "(" c) (readlist)
			     else       (readatom)
			  }
	           }
       }
    def readlist ()
      c <- text[index]))
      cond {(=? "(" c) (let i <- (readlist)) in { (need ")") (send (cons i $NIL) child) }
            (=? ")" c) (send "extra rpar" error)
            else       (send (readatom) child) }

    def readatom ()
      cond {(terminated?)        (consatom pointer $NIL)
            (next-is-character?) (consatom pointer (readatom))
	    else                 (consatom pointer $NIL)}
  }
 